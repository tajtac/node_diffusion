# -*- coding: mbcs -*-
#
# Abaqus/CAE Release 2021 replay file
# Internal Version: 2020_03_06-09.50.37 167380
# Run by vtac on Sun Jan 16 20:19:03 2022
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=368.979156494141, 
    height=177.697235107422)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from caeModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
o1 = session.openOdb(name='/home/vtac/NODE_abaqus/UANISO/exp.odb')
session.viewports['Viewport: 1'].setValues(displayedObject=o1)
#* OdbError: The database is from a previous release of Abaqus. 
#* Run abaqus -upgrade -job <newFileName> -odb <oldOdbFileName> to upgrade it.
from  abaqus import session
session.upgradeOdb("/home/vtac/NODE_abaqus/UANISO/exp.odb", 
    "/scratch/gilbreth/vtac/exp1642382372.80889.odb", )
from  abaqus import session
o7 = session.openOdb('/scratch/gilbreth/vtac/exp1642382372.80889.odb')
#: Model: /scratch/gilbreth/vtac/exp1642382372.80889.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     3
#: Number of Meshes:             4
#: Number of Element Sets:       3
#: Number of Node Sets:          5
#: Number of Steps:              3
session.viewports['Viewport: 1'].setValues(displayedObject=o7)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    DEFORMED, ))
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.commonOptions.setValues(
    deformationScaling=UNIFORM, uniformScaleFactor=1.5)
session.viewports['Viewport: 1'].odbDisplay.commonOptions.setValues(
    uniformScaleFactor=2.0)
session.viewports['Viewport: 1'].odbDisplay.commonOptions.setValues(
    deformationScaling=AUTO)
session.viewports['Viewport: 1'].odbDisplay.contourOptions.setValues(
    maxAutoCompute=OFF, maxValue=0.03, minValue=5.63736E-06)
session.viewports['Viewport: 1'].odbDisplay.contourOptions.setValues(
    maxValue=0.02)
session.viewports['Viewport: 1'].odbDisplay.contourOptions.setValues(
    maxValue=0.01)
session.viewports['Viewport: 1'].odbDisplay.contourOptions.setValues(
    maxValue=0.015)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    DEFORMED, ))
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.commonOptions.setValues(
    deformationScaling=UNIFORM)
session.viewports['Viewport: 1'].view.setValues(session.views['Front'])
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
leaf = dgo.LeafFromPartInstance(partInstanceName=("ES_WALLS-1", ))
session.viewports['Viewport: 1'].odbDisplay.displayGroup.replace(leaf=leaf)
#: Warning: The user-specified Contour Max value must be greater than the auto-computed Contour Min value.
#: The user-specified Contour Max value has been reset to the auto-computed Contour Max value.
leaf = dgo.Leaf(leafType=DEFAULT_MODEL)
session.viewports['Viewport: 1'].odbDisplay.displayGroup.replace(leaf=leaf)
leaf = dgo.LeafFromPartInstance(partInstanceName=("ES_WALLS-1", ))
session.viewports['Viewport: 1'].odbDisplay.displayGroup.remove(leaf=leaf)
leaf = dgo.LeafFromPartInstance(partInstanceName=("ES_FACE-1", ))
session.viewports['Viewport: 1'].odbDisplay.displayGroup.remove(leaf=leaf)
session.viewports['Viewport: 1'].odbDisplay.contourOptions.setValues(
    maxAutoCompute=OFF)
session.viewports['Viewport: 1'].view.setValues(nearPlane=20.9276, 
    farPlane=38.8323, width=20.0009, height=9.63319, cameraPosition=(26.2888, 
    20.7835, -13.1343), cameraUpVector=(-0.877766, 0.151837, -0.454392), 
    cameraTarget=(5.27031, 4.92779, 0.439865))
session.viewports['Viewport: 1'].view.setValues(nearPlane=23.2484, 
    farPlane=36.6065, width=22.2189, height=10.7015, cameraPosition=(16.564, 
    16.0874, -24.6101), cameraUpVector=(-0.928039, 0.349306, 0.129342), 
    cameraTarget=(5.18624, 4.88719, 0.340659))
session.viewports['Viewport: 1'].view.setValues(nearPlane=21.4619, 
    farPlane=38.1937, width=20.5116, height=9.87916, cameraPosition=(24.6928, 
    18.0053, 18.9127), cameraUpVector=(-0.885171, 0.459728, 0.0715776), 
    cameraTarget=(5.26932, 4.90679, 0.785493))
session.viewports['Viewport: 1'].view.setValues(nearPlane=26.4438, 
    farPlane=33.194, width=25.2729, height=12.1724, cameraPosition=(6.40443, 
    5.51209, 30.4519), cameraUpVector=(-0.486979, 0.807915, -0.33185), 
    cameraTarget=(5.14289, 4.82042, 0.865264))
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    DEFORMED, ))
session.viewports['Viewport: 1'].odbDisplay.commonOptions.setValues(
    deformationScaling=AUTO)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=9 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=8 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=7 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=6 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=5 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=4 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=3 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=2 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=1, frame=10 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=1, frame=9 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=1, frame=8 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=1, frame=7 )
session.viewports['Viewport: 1'].setValues(displayedObject=None)
openMdb(pathName='/home/vtac/NODE_abaqus/UANISO/exp.cae')
#: The model database "/home/vtac/NODE_abaqus/UANISO/exp.cae" has been opened.
session.viewports['Viewport: 1'].setValues(displayedObject=None)
p = mdb.models['square_expander'].parts['ES_face']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
a = mdb.models['square_expander'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Step-3')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON, optimizationTasks=OFF, 
    geometricRestrictions=OFF, stopConditions=OFF)
a = mdb.models['square_expander'].rootAssembly
i1 = a.instances['ES_face-1']
leaf = dgm.LeafFromInstance((i1, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.remove(leaf=leaf)
a = mdb.models['square_expander'].rootAssembly
i1 = a.instances['ES_walls-1']
leaf = dgm.LeafFromInstance((i1, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.remove(leaf=leaf)
session.viewports['Viewport: 1'].view.setValues(nearPlane=21.4393, 
    farPlane=37.5547, width=19.9994, height=9.63249, cameraPosition=(32.4824, 
    11.0464, -8.77213), cameraUpVector=(-0.642497, 0.589096, -0.490065), 
    cameraTarget=(5.24949, 4.99071, -0.19943))
a = mdb.models['square_expander'].rootAssembly
v1 = a.instances['SE_skin-1'].vertices
verts1 = v1.getSequenceFromMask(mask=('[#d ]', ), )
region = regionToolset.Region(vertices=verts1)
mdb.models['square_expander'].DisplacementBC(name='BC-5', 
    createStepName='Step-3', region=region, u1=SET, u2=SET, u3=SET, ur1=SET, 
    ur2=SET, ur3=SET, amplitude=UNSET, fixed=ON, distributionType=UNIFORM, 
    fieldName='', localCsys=None)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['exp_uaniso'].writeInput(consistencyChecking=OFF)
#: The job input file has been written to "exp_uaniso.inp".
session.viewports['Viewport: 1'].setValues(
    displayedObject=session.odbs['/scratch/gilbreth/vtac/exp1642382372.80889.odb'])
o1 = session.openOdb(name='/home/vtac/NODE_abaqus/UANISO/exp.odb')
session.viewports['Viewport: 1'].setValues(displayedObject=o1)
#* OdbError: The database is from a previous release of Abaqus. 
#* Run abaqus -upgrade -job <newFileName> -odb <oldOdbFileName> to upgrade it.
from  abaqus import session
session.upgradeOdb("/home/vtac/NODE_abaqus/UANISO/exp.odb", 
    "/scratch/gilbreth/vtac/exp1642385477.66566.odb", )
from  abaqus import session
o7 = session.openOdb('/scratch/gilbreth/vtac/exp1642385477.66566.odb')
#: Model: /scratch/gilbreth/vtac/exp1642385477.66566.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     3
#: Number of Meshes:             4
#: Number of Element Sets:       3
#: Number of Node Sets:          5
#: Number of Steps:              3
session.viewports['Viewport: 1'].setValues(displayedObject=o7)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
